"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[871],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?m(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},m=Object.keys(e);for(r=0;r<m.length;r++)n=m[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(r=0;r<m.length;r++)n=m[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,m=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),f=o,y=u["".concat(i,".").concat(f)]||u[f]||s[f]||m;return n?r.createElement(y,a(a({ref:t},c),{},{components:n})):r.createElement(y,a({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var m=n.length,a=new Array(m);a[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<m;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1342:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s}});var r=n(7462),o=n(3366),m=(n(7294),n(3905)),a=["components"],l={title:"\u8c08\u8c08 overcommit memory",slug:"posts-overcommit-memory",tags:["linux","memory"]},i=void 0,p={permalink:"/posts-overcommit-memory",source:"@site/blog/2016-02-15-overcommit-memory.md",title:"\u8c08\u8c08 overcommit memory",description:"\u6625\u8282\u524d\u51e0\u5929\u8fd0\u7ef4\u5927\u4fa0\u8bf4\u8981\u6269\u5bb9 Redis \u4ece\u5e93\u4f46\u540c\u6b65\u4e00\u76f4\u5931\u8d25\uff0c\u770b\u65e5\u5fd7\u53d1\u73b0\u5728\u505a bgsave \u7684\u65f6\u5019\u4e00\u76f4\u5931\u8d25\u3002 \u65e5\u5fd7\u5982\u4e0b:",date:"2016-02-15T00:00:00.000Z",formattedDate:"February 15, 2016",tags:[{label:"linux",permalink:"/tags/linux"},{label:"memory",permalink:"/tags/memory"}],readingTime:5.84,truncated:!0,authors:[],frontMatter:{title:"\u8c08\u8c08 overcommit memory",slug:"posts-overcommit-memory",tags:["linux","memory"]},prevItem:{title:"oom killer \u5b9e\u73b0",permalink:"/posts-how-oom-killer-works"},nextItem:{title:"php \u5982\u4f55\u68c0\u67e5 TCP \u8fde\u63a5\u662f\u5426\u5173\u95ed",permalink:"/posts-how-php-check-tcp-liveness"}},c={authorsImageUrls:[]},s=[{value:"2) \u90a3\u4e48\u95ee\u9898\u6765\u4e86",id:"2-\u90a3\u4e48\u95ee\u9898\u6765\u4e86",level:3},{value:"3\uff09 \u89e3\u51b3\u65b9\u6848",id:"3-\u89e3\u51b3\u65b9\u6848",level:3},{value:"4) Overcommit memory",id:"4-overcommit-memory",level:3},{value:"5\uff09 END",id:"5-end",level:3}],u={toc:s};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,m.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("p",null,"\u6625\u8282\u524d\u51e0\u5929\u8fd0\u7ef4\u5927\u4fa0\u8bf4\u8981\u6269\u5bb9 Redis \u4ece\u5e93\u4f46\u540c\u6b65\u4e00\u76f4\u5931\u8d25\uff0c\u770b\u65e5\u5fd7\u53d1\u73b0\u5728\u505a bgsave \u7684\u65f6\u5019\u4e00\u76f4\u5931\u8d25\u3002 \u65e5\u5fd7\u5982\u4e0b:"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-shell"},"[41738] 04 Feb 11:16:39.859 * Full resync requested by slave.\n[41738] 04 Feb 11:16:39.859 * Starting BGSAVE for SYNC\n[41738] 04 Feb 11:16:39.860 # Can't save in background: fork: Cannot allocate memory\n[41738] 04 Feb 11:16:39.860 * Replication failed, can't BGSAVE\n")),(0,m.kt)("p",null,"\u4ece\u65e5\u5fd7\u53ef\u4ee5\u770b\u5230 fork \u7684\u65f6\u5019\u5185\u5b58\u5206\u914d\u5931\u8d25\u5bfc\u81f4 bgsave \u65e0\u6cd5\u6210\u529f\uff0c\u90a3\u5c31\u662f\u53ef\u7528\u5185\u5b58\u4e0d\u8db3?"),(0,m.kt)("p",null,"\u4f7f\u7528 ",(0,m.kt)("inlineCode",{parentName:"p"},"info memory")," \u770b\u4e86\u4e00\u4e0b\u5b9e\u4f8b\u4f7f\u7528\u5185\u5b58\uff0c \u5dee\u4e0d\u591a\u7528\u4e86 ",(0,m.kt)("inlineCode",{parentName:"p"},"8G"),":"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-shell"},"used_memory:8045067888\nused_memory_human:7.49G\nused_memory_rss:8216522752\nused_memory_peak:50615269608\nused_memory_peak_human:47.14G\n")),(0,m.kt)("p",null,"\u7136\u540e\u7528 ",(0,m.kt)("inlineCode",{parentName:"p"},"free -m")," \u770b\u5230\u7cfb\u7edf\u7a7a\u95f2\u9875\u52a0\u4e0a pagecache \u4e5f\u6709 21G\uff0c\u8fd9\u4e2a\u7a7a\u95f2\u5185\u5b58\u8fdc\u5927\u4e8e\u5b9e\u4f8b\u4f7f\u7528\u7684 8G \u5440\uff0c\u4e3a\u4ec0\u4e48\u4f1a fork \u5931\u8d25\u5462\uff1f"),(0,m.kt)("p",null,"\u4f7f\u7528 ",(0,m.kt)("inlineCode",{parentName:"p"},"top")," \u53d1\u73b0\u8fd9\u4e2a Redis \u5b9e\u4f8b\u865a\u62df\u5185\u5b58\u4f7f\u7528\u4e86 48.7G, \u5e38\u9a7b\u5185\u5b58\u4f7f\u7528\u662f 7.6G\u3002"),(0,m.kt)("p",null,(0,m.kt)("img",{parentName:"p",src:"https://cdn.jsdelivr.net/gh/git-hulk/git-hulk.github.io/images/overcommit-memory-top.jpeg",alt:"img"})),(0,m.kt)("h3",{id:"2-\u90a3\u4e48\u95ee\u9898\u6765\u4e86"},"2) \u90a3\u4e48\u95ee\u9898\u6765\u4e86"),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"},"Q1. Redis \u7edf\u8ba1\u7684\u865a\u62df\u5185\u5b58\u4e3a\u4ec0\u4e48\u5360\u7528\u8fd9\u4e48\u591a?")),(0,m.kt)("p",null,"\u4ece\u73b0\u8c61\u6765\u770b\u662f\u5cf0\u503c\u5206\u914d\u4e86\u8fd9\u4e48\u591a(\u89c1 peak_memory)\u3002 \u4f46\u5728\u5185\u5b58\u91ca\u653e\u7684\u65f6\u5019\uff0c\u7269\u7406\u5185\u5b58\u91ca\u653e\u800c\u865a\u62df\u5185\u5b58\u65e0\u6cd5\u6536\u7f29\u3002\u8fd9\u4e2a\u8ddf\u5185\u5b58\u5206\u914d\u6709\u5173, \u5f53\u524d Redis \u9ed8\u8ba4\u662f\u7528\u7684\u662f jemalloc\u3002"),(0,m.kt)("p",null,"\u5728 github \u4e0a\u9762\u63d0\u4e86\u4e00\u4e2a issue \u8bf4\u8fd9\u4e2a\u95ee\u9898\uff0c Redis \u4f5c\u8005\u4e5f\u5927\u6982\u662f\u8fd9\u4e2a\u610f\u601d\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u865a\u62df\u5185\u5b58\u65e0\u6cd5\u6536\u7f29\u7684\u539f\u56e0\uff0c\u6709\u5f85\u8fdb\u4e00\u6b65\u7814\u7a76\u3002"),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"},"Q2. fork \u662f\u6839\u636e\u865a\u62df\u5185\u5b58\u6765\u68c0\u67e5\u5185\u5b58\u662f\u5426\u591f\u7528? ")),(0,m.kt)("p",null,"\u663e\u7136\u662f\u7684\u3002\u56e0\u4e3a\u5982\u679c\u662f\u6839\u636e\u7269\u7406\u5185\u5b58\uff0cfork \u662f\u53ef\u4ee5\u6210\u529f\u7684\u3002\u90a3\u5176\u5b9e\u5269\u4f59\u7684\u7cfb\u7edf\u5185\u5b58\u662f\u8db3\u591f\u7684\uff0c\u800c\u6211\u9700\u8981\u7684\u5185\u5b58\u5e76\u6ca1\u6709\u8fd9\u4e48\u5927\uff0c\u6709\u4ec0\u4e48\u529e\u6cd5\u53ef\u4ee5\u8ba9\u8fdb\u7a0b\u7ee7\u7eed fork \u4e48\uff1f \u7b54\u6848\u5c31\u662f\u628a ",(0,m.kt)("inlineCode",{parentName:"p"},"vm.overcommit_memory")," \u8bbe\u7f6e\u4e3a 1\u3002"),(0,m.kt)("h3",{id:"3-\u89e3\u51b3\u65b9\u6848"},"3\uff09 \u89e3\u51b3\u65b9\u6848"),(0,m.kt)("p",null,(0,m.kt)("inlineCode",{parentName:"p"},"vm.overcommit_memory")," \u7528\u6765\u63a7\u5236\u5728 fork \u8fdb\u7a0b\u65f6\u7528\u4ec0\u4e48\u59ff\u52bf\u6765\u68c0\u67e5\u5185\u5b58\u662f\u5426\u591f\u7528\u3002 Redis \u5728\u5b9e\u4f8b\u542f\u52a8\u7684\u65f6\u5019\u7ed9\u51fa\u4e86\u63d0\u793a\u4fe1\u606f\u3002"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-shell"},"WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. \nTo fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf \nand then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n")),(0,m.kt)("p",null,"vm.overcommit_memory \u53d6\u503c\u662f 0, 1, 2, \u9ed8\u8ba4\u662f 0\u3002 \u5177\u4f53\u6570\u503c\u7684\u610f\u4e49\u53ef\u53c2\u8003\u4e0b\u9762\u7684\u6587\u6863\uff0c\u540e\u9762\u4f1a\u7ed3\u5408\u4ee3\u7801\u6765\u8bf4\u660e\u3002"),(0,m.kt)("p",null,(0,m.kt)("a",{parentName:"p",href:"https://www.kernel.org/doc/Documentation/vm/overcommit-accounting"},"https://www.kernel.org/doc/Documentation/vm/overcommit-accounting")),(0,m.kt)("h3",{id:"4-overcommit-memory"},"4) Overcommit memory"),(0,m.kt)("p",null,"\u6211\u4eec\u5177\u4f53\u4ece\u5185\u6838\u4ee3\u7801(Linux-2.6.32)\u6765\u770b\u8fd9\u4e2a\u53c2\u6570\u5982\u4f55\u5728 fork \u8fdb\u7a0b\u7684\u65f6\u5019\u8fdb\u884c\u5185\u5b58\u6821\u9a8c\u3002"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"#define OVERCOMMIT_GUESS        0\n#define OVERCOMMIT_ALWAYS       1\n#define OVERCOMMIT_NEVER        2\n")),(0,m.kt)("p",null,"\u6211\u4eec\u5728\u7a0b\u5e8f\u6267\u884c fork() \u7684\u65f6\u5019\uff0c\u4f1a\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u4e2d\u65ad\u5207\u6362\u5230\u5185\u6838\u6001\uff0c\u518d\u8c03\u7528 sys_fork\u3002"),(0,m.kt)("p",null,"\u4e0b\u9762\u662f fork \u8fdb\u7a0b\u65f6\uff0c\u5185\u6838\u7684\u7cfb\u7edf\u8c03\u7528\u94fe:"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"sys_fork -> copy_mm -> dup_mm -> dup_mmap -> \nsecurity_vm_enough_memory -> cap_vm_enough_memory -> __vm_enough_memory\n")),(0,m.kt)("p",null,"\u6700\u540e\u8c03\u7528 __vm_enough_memory \u8fdb\u884c\u5185\u5b58\u68c0\u67e5\uff0c\u6211\u4eec\u91cd\u70b9\u6765\u770b\u8fd9\u4e2a\u51fd\u6570\u3002"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-c"},"int __vm_enough_memory(struct mm_struct *mm, long pages, int cap_sys_admin) {\n    ...\n    /*    \n     * Sometimes we want to use more memory than we have\n     */\n    // OVERCOMMIT_ALWAYS = 1, \u4ec0\u4e48\u90fd\u4e0d\u68c0\u67e5\u76f4\u63a5\u8fd4\u56de\n    if (sysctl_overcommit_memory == OVERCOMMIT_ALWAYS)\n        return 0;\n    if (sysctl_overcommit_memory == OVERCOMMIT_GUESS) {\n        unsigned long n;\n        \n        // \u5269\u4f59\u5bb9\u91cf = page cache\u4f7f\u7528\u7684\u9875 + \u7a7a\u95f2swap + \u53ef\u56de\u6536 slab + \u7cfb\u7edf\u7a7a\u95f2\u9875\n        free = global_page_state(NR_FILE_PAGES);\n        free += nr_swap_pages;\n        free += global_page_state(NR_SLAB_RECLAIMABLE);\n        \n        // root \u5982\u679c\u662f\u975e root \u7528\u6237\u9700\u8981\u4fdd\u7559 3%\n        if (!cap_sys_admin)\n            free -= free / 32;\n            \n        // \u5982\u679c\u7a7a\u95f2\u7684\u9875\u8db3\u591f\u76f4\u63a5\u8fd4\u56de\n        if (free > pages)\n            return 0;\n            \n        // \u8ba1\u7b97\u7cfb\u7edf\u7a7a\u95f2\u9875\u6bd4\u8f83\u8017\u65f6\uff0c\u6240\u6709\u4e0a\u9762 3 \u79cd\u7a7a\u95f2\u5df2\u7ecf\u8db3\u591f\u5c31\u4e0d\u8ba1\u7b97\u3002\n        n = nr_free_pages();\n       \n        // \u53bb\u6389\u4e00\u4e9b\u7cfb\u7edf\u4fdd\u7559\u9875\n        if (n <= totalreserve_pages)\n            goto error;\n        else\n            n -= totalreserve_pages;\n        \n        // root \u5982\u679c\u662f\u975e root \u7528\u6237\u9700\u8981\u4fdd\u7559 3%\n        if (!cap_sys_admin)\n            n -= n / 32;\n        free += n;\n       \n        if (free > pages)\n            return 0;\n\n        goto error;\n    }\n    \n    // \u4e0a\u9762\u4e24\u4e2a\u5206\u652f\u5206\u522b\u662f\u503c\u4e3a 1 \u548c 0 \u7684\u60c5\u51b5\uff0c\u4e0b\u9762\u5219\u662f\u503c\u4e3a 2 \u7684\u5224\u65ad\u6761\u4ef6\n    // \u56e0\u4e3a\u6211\u4eec\u8ba1\u7b97\u7684\u662f normal page, \u6240\u4ee5\u8ba1\u7b97\u5141\u8bb8\u4f7f\u7528\u7684\u5185\u5b58\u9700\u8981\u6263\u6389 huge page\n    // sysctl_overcommit_ratio \u7cfb\u7edf\u63a7\u5236\u7684\u6bd4\u4f8b\u53c2\u6570\n    allowed = (totalram_pages - hugetlb_total_pages())\n            * sysctl_overcommit_ratio / 100;\n\n    //\u975eroot \u7528\u6237\u4fdd\u7559 3%\n    if (!cap_sys_admin)\n        allowed -= allowed / 32;\n    // \u52a0\u4e0a swap \u7a7a\u95f2\u9875\n    allowed += total_swap_pages;\n    \n    // \u9632\u6b62\u5355\u8fdb\u7a0b\u5360\u7528\u8fc7\u591a\u5185\u5b58\uff0c\u9700\u8981\u4fdd\u7559 3% \u7ed9\u5176\u4ed6\u8fdb\u7a0b\n    if (mm)\n        allowed -= mm->total_vm / 32;\n\n    if (percpu_counter_read_positive(&vm_committed_as) < allowed)\n        return 0;\nerror:\n    vm_unacct_memory(pages);\n\n    return -ENOMEM;\n}\n")),(0,m.kt)("p",null,"\u4ece\u4ee3\u7801\u5c42\u9762\u6765\u770b\uff1a"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},"overcommit_memory = 1, \u4e0d\u68c0\u67e5\uff0c\u6709\u9505\u81ea\u5df1\u80cc\u3002"),(0,m.kt)("li",{parentName:"ol"},"overcommit_memory = 0\uff0c\u68c0\u67e5\u5f53\u524d\u8fdb\u7a0b\u9700\u8981\u7684\u865a\u62df\u5185\u5b58 < (\u5f53\u524d\u5269\u4f59\u7684\u7269\u7406 + swap\u5206\u533a)"),(0,m.kt)("li",{parentName:"ol"},"overcommit_memory = 2, \u68c0\u67e5\u6574\u4e2a\u7cfb\u7edf\u5df2\u7ecf\u5206\u914d\u7684\u5185\u5b58 < (\u7269\u7406\u5185\u5b58*\u5141\u8bb8\u6bd4\u4f8b + swap\u5206\u533a)")),(0,m.kt)("h3",{id:"5-end"},"5\uff09 END"),(0,m.kt)("p",null,"\u8c03\u6574\u7cfb\u7edf\u53c2\u6570\u8fd8\u662f\u9700\u8981\u8c28\u614e\u518d\u8c28\u614e\uff0c\u5728\u6ca1\u6709\u8be6\u7ec6\u67e5\u770b\u5b98\u65b9\u6587\u6863\u4ee5\u53ca\u5168\u9762\u4e86\u89e3\u53c2\u6570\u5bf9\u7cfb\u7edf\u7684\u5f71\u54cd\u7684\u65f6\u5019\uff0c\u5207\u52ff\u624b\u8d31\u968f\u610f\u8c03\u6574\u3002"))}f.isMDXComponent=!0}}]);