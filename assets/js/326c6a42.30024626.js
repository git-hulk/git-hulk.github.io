"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6862],{3905:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return _}});var r=n(7294);function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,p=function(e,t){if(null==e)return{};var n,r,p={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(p[n]=e[n]);return p}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(p[n]=e[n])}return p}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},i=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,p=e.mdxType,o=e.originalType,l=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),m=c(n),_=p,f=m["".concat(l,".").concat(_)]||m[_]||u[_]||o;return n?r.createElement(f,a(a({ref:t},i),{},{components:n})):r.createElement(f,a({ref:t},i))}));function _(e,t){var n=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var o=n.length,a=new Array(o);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:p,a[1]=s;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8689:function(e,t,n){n.r(t),n.d(t,{assets:function(){return i},contentTitle:function(){return l},default:function(){return _},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=n(7462),p=n(3366),o=(n(7294),n(3905)),a=["components"],s={author:"hulk",slug:"posts-how-php-check-tcp-liveness",title:"php \u5982\u4f55\u68c0\u67e5 TCP \u8fde\u63a5\u662f\u5426\u5173\u95ed",tags:["PHP","TCP"]},l=void 0,c={permalink:"/posts-how-php-check-tcp-liveness",source:"@site/blog/2015-08-08-how-php-check-tcp-liveness.md",title:"php \u5982\u4f55\u68c0\u67e5 TCP \u8fde\u63a5\u662f\u5426\u5173\u95ed",description:"\u957f\u8fde\u63a5\u53ef\u4ee5\u51cf\u5c11\u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b, \u4f7f\u7528\u957f\u8fde\u63a5\u53ef\u4ee5\u63d0\u9ad8\u670d\u52a1\u7684\u6027\u80fd\u3002php \u5f88\u591a\u6269\u5c55\u90fd\u652f\u6301\u957f\u8fde\u63a5\uff0c\u5982 redis, memcache, mysql \u7684\u4e3b\u6d41\u6269\u5c55\u90fd\u652f\u6301\u3002",date:"2015-08-08T00:00:00.000Z",formattedDate:"August 8, 2015",tags:[{label:"PHP",permalink:"/tags/php"},{label:"TCP",permalink:"/tags/tcp"}],readingTime:3.495,truncated:!0,authors:[{name:"hulk"}],frontMatter:{author:"hulk",slug:"posts-how-php-check-tcp-liveness",title:"php \u5982\u4f55\u68c0\u67e5 TCP \u8fde\u63a5\u662f\u5426\u5173\u95ed",tags:["PHP","TCP"]},prevItem:{title:"\u8c08\u8c08 overcommit memory",permalink:"/posts-overcommit-memory"}},i={authorsImageUrls:[void 0]},u=[],m={toc:u};function _(e){var t=e.components,n=(0,p.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u957f\u8fde\u63a5\u53ef\u4ee5\u51cf\u5c11\u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b, \u4f7f\u7528\u957f\u8fde\u63a5\u53ef\u4ee5\u63d0\u9ad8\u670d\u52a1\u7684\u6027\u80fd\u3002php \u5f88\u591a\u6269\u5c55\u90fd\u652f\u6301\u957f\u8fde\u63a5\uff0c\u5982 redis, memcache, mysql \u7684\u4e3b\u6d41\u6269\u5c55\u90fd\u652f\u6301\u3002"),(0,o.kt)("p",null,"\u6211\u4eec\u77e5\u9053\u957f\u8fde\u63a5\u5c31\u662f\u4e00\u6b21\u5efa\u7acb\u8fde\u63a5\uff0c\u4f7f\u7528\u4e4b\u540e\u4e0d\u4f1a\u9a6c\u4e0a\u91ca\u653e\uff0c\u800c\u662f\u628a\u8fd9\u4e2a\u8fde\u63a5\u653e\u5230\u8fde\u63a5\u6c60\u3002\u90a3\u4e48\u5f15\u53d1\u7684\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\uff0c\u6211\u4eec\u4e0b\u6b21\u4f7f\u7528\u65f6\u5982\u4f55\u77e5\u9053\u8fd9\u4e2a\u8fde\u63a5\u662f\u5426\u5df2\u7ecf\u88ab\u5173\u95ed\u3002"),(0,o.kt)("p",null,"\u6211\u4eec\u6765\u770b\u770b phpredis \u662f\u5982\u4f55\u6765\u5224\u65ad\uff0c\u8fde\u63a5\u662f\u5426\u53ef\u7528\u3002 phpredis \u68c0\u67e5\u7684\u51fd\u6570\u5728 library.c \u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"redis_check_eof")," \u7684\u65b9\u6cd5\uff0c\u800c\u8fd9\u4e2a\u65b9\u6cd5\u8c03\u7528\u7684\u662f php \u5185\u90e8\u7684\u65b9\u6cd5 ",(0,o.kt)("inlineCode",{parentName:"p"},"php_stream_eof"),", \u6211\u4eec\u6765\u770b\u8fd9\u4e2a\u65b9\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"PHPAPI int _php_stream_eof(php_stream *stream TSRMLS_DC)\n{\n    // \u5982\u679c\u6709\u6570\u636e\u672a\u8bfb\u53d6\uff0c\u8bf4\u660e socket \u8fd8\u662f\u53ef\u7528\n    if (stream->writepos - stream->readpos > 0) {\n        return 0;\n    }\n\n    // \u54a6? \u8fd9\u91cc\u901a\u8fc7 php_stream_set_option \u6765\u68c0\u67e5\n    if (!stream->eof && PHP_STREAM_OPTION_RETURN_ERR ==\n            php_stream_set_option(stream, PHP_STREAM_OPTION_CHECK_LIVENESS,\n            0, NULL)) {\n        stream->eof = 1;\n    }\n\n    return stream->eof;\n}\n")),(0,o.kt)("p",null,"\u5224\u65adsocket \u662f\u5426\u53ef\u7528, \u6709\u4e24\u4e2a\u6761\u4ef6:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"writepos > readpos, \u8bf4\u660e\u8fd8\u6709\u6570\u636e\u672a\u8bfb, \u8fde\u63a5\u6b63\u5728\u4f7f\u7528\u4e2d"),(0,o.kt)("li",{parentName:"ol"},"php_stream_set_option \u901a\u8fc7 PHP_STREAM_OPTION_CHECK_LIVENESS \u9009\u9879\u6765\u5224\u65ad")),(0,o.kt)("p",null,"\u89e3\u6790\u6765\u770b\u770b php_stream_set_option \u662f\u5982\u4f55\u5b9e\u73b0\u7684:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"PHPAPI int _php_stream_set_option(php_stream *stream, int option, int value, void *ptrparam TSRMLS_DC)\n{\n    int ret = PHP_STREAM_OPTION_RETURN_NOTIMPL;\n\n    if (stream->ops->set_option) {\n        ret = stream->ops->set_option(stream, option, value, ptrparam TSRMLS_CC);\n    }\n    ...\n}\n")),(0,o.kt)("p",null,"\u8fd9\u4e2a\u51fd\u6570\u8c03\u7528\u7684\u662f stream \u7684 set_option \u65b9\u6cd5\uff0c\u6211\u4eec\u77e5\u9053 php \u7684stream \u662f\u4e00\u7c7b\u6587\u4ef6\u64cd\u4f5c\u7684\u62bd\u8c61\u3002\u5728 php \u91cc\u9762\u7684 tcp, udp\uff0csocket, \u666e\u901a\u6587\u4ef6, \u6587\u4ef6\u6d41\u7b49\u90fd\u662f stream, \u53ea\u662f\u4ed6\u4eec\u5b9e\u73b0\u7684\u65b9\u6cd5\u5404\u6709\u5dee\u5f02\uff0c\u6211\u4eec\u8fd9\u91cc\u53ea\u5173\u6ce8 tcp \u7684\u5b9e\u73b0\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'php_stream_ops php_stream_socket_ops = {\n    php_sockop_write, php_sockop_read,\n    php_sockop_close, php_sockop_flush,\n    "tcp_socket",\n    NULL, /* seek */\n    php_sockop_cast,\n    php_sockop_stat,\n    php_tcp_sockop_set_option,\n};\n')),(0,o.kt)("p",null,"\u5bf9\u4e8e socket \u7684stream, \u5b83\u7684 set_option \u5c31\u662f php_tcp_sockop_set_option, \u5b9e\u73b0\u5982\u4e0b:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"if (php_pollfd_for(sock->socket, PHP_POLLREADABLE|POLLPRI, &tv) > 0) {\n    if (0 >= recv(sock->socket, &buf, sizeof(buf), MSG_PEEK) && php_socket_errno() != EWOULDBLOCK) {\n            alive = 0;\n    }\n}\n")),(0,o.kt)("p",null,"\u8fd9\u91cc\u6211\u4eec\u770b\u5230, \u68c0\u67e5\u4e00\u4e2a socket \u662f\u5426\u5b58\u6d3b, \u662f\u901a\u8fc7 poll \u6765\u67e5\u8be2 socket \u7684\u53ef\u8bfb\u4e9b\u72b6\u6001\u3002\u7136\u540e\u4f7f\u7528 recv \u6765\u5224\u65ad socket \u662f\u5426\u5173\u95ed\uff0c\u6216\u8005\u51fa\u9519\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"1. recv = 0 \u65f6, \u8bf4\u660e\u8fde\u63a5\u5df2\u7ecf\u5173\u95ed\n2. recv < 0 \u4e14  errno != EWOULDBLOCK \u65f6\uff0c\u8bf4\u660e socket \u51fa\u9519\u4e86\u3002\n")),(0,o.kt)("p",null,"\u90e8\u95e8\u7ec6\u5fc3\u7684\u5c0f\u4f19\u4f34\uff0c\u53d1\u73b0\u4e86\u8fd9\u4e2a\u5224\u65ad\u6761\u4ef6\u6709\u4e00\u4e2a\u5c0f bug\u3002 \u5982\u679c\u4e0a\u4e00\u6b21\u67e5\u8be2\u7ed3\u679c\u7684 errno = EWOULDBLOCK\uff0c\u56e0\u4e3a\u53ea\u6709\u5f02\u5e38\u624d\u4f1a\u8986\u76d6 errno\uff0c\u6240\u4ee5recv = 0\u65f6\uff0c\u4e5f\u4f1a\u8ba4\u4e3a socket \u662f\u5b58\u6d3b\u7684\u3002"),(0,o.kt)("p",null,"php_pollfd_for \u7684\u5b9e\u73b0\u4e5f\u6709\u4e00\u4e9b\u5c0f\u6280\u5de7\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"static inline int php_pollfd_for(php_socket_t fd, int events, struct timeval *timeouttv)\n{\n    php_pollfd p;\n    int n;\n\n    p.fd = fd;\n    p.events = events;\n    p.revents = 0;\n    \n    n = php_poll2(&p, 1, php_tvtoto(timeouttv));\n\n    if (n > 0) {\n        return p.revents;\n    }\n\n    return n;\n}\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"php_poll2")," \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f 1\uff0c poll \u53ea\u4f1a\u67e5\u8be2\u4e00\u4e2a fd, poll \u4e0d\u4f1a\u5f15\u5165\u67e5\u8be2\u591a\u4e2a\u65e0\u7528 fd \u7684\u95ee\u9898\u3002 \u7b2c\u4e09\u90a3\u4e2a\u53c2\u6570\u5728 check_liveness \u65f6\uff0c\u662f\u8bbe\u7f6e\u4e3a 0, poll \u4e5f\u4e0d\u4f1a\u963b\u585e\u3002"))}_.isMDXComponent=!0}}]);